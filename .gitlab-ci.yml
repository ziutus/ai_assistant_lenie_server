variables:
  CI: "false"
  AWS_REGION: "us-east-1"
  INSTANCE_ID: "i-03908d34c63fce042"
  CI_REGISTRY_IMAGE: "lenie-ai-server"
  TAG_VERSION: "0.2.11.2"

stages:
  - build-docker-image
  - push-docker-image
  - test
  - deploy


start_runner:
  stage: .pre
  variables:
    GIT_STRATEGY: none  # Zapobieganie klonowaniu repozytorium
  before_script:
    - apt-get update -y
    - apt-get install -y awscli
    - aws configure set aws_access_key_id $GITLAB_AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $GITLAB_AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_REGION
  script:
    - echo "Starting AWS EC2 runner instance..."
    - aws ec2 start-instances --instance-ids $INSTANCE_ID

job-build-docker-image:
  stage: build-docker-image
  tags:
    - AWS
  script:
    - echo "Now let's build it"
    - docker build -t $DOCKER_HUB_USERNAME/$CI_REGISTRY_IMAGE:$TAG_VERSION .
    - docker tag $DOCKER_HUB_USERNAME/$CI_REGISTRY_IMAGE:$TAG_VERSION $DOCKER_HUB_USERNAME/$CI_REGISTRY_IMAGE:latest
  only:
    - dev
    - main

job-push-docker-image:
  stage: push-docker-image
  tags:
    - AWS
  services:
    - docker:dind
  before_script:
    - docker info
    - echo "$DOCKER_HUB_USERNAME:$DOCKER_HUB_TOKEN"
    - docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_TOKEN"
  script:
    - echo "Now let's push it"
    - docker push $DOCKER_HUB_USERNAME/$CI_REGISTRY_IMAGE:$TAG_VERSION
    - docker push $DOCKER_HUB_USERNAME/$CI_REGISTRY_IMAGE:latest
  only:
    - dev
    - main


stop_runner:
  stage: .post
  variables:
    GIT_STRATEGY: none  # Zapobieganie klonowaniu repozytorium
  before_script:
    - apt-get update -y
    - apt-get install -y awscli
    - aws configure set aws_access_key_id $GITLAB_AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $GITLAB_AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_REGION
  script:
    - echo "Stopping AWS EC2 instance..."
    - aws ec2 stop-instances --instance-ids $INSTANCE_ID
