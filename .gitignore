./.idea
.env
/tmp/*
.idea/
.venv

*/tmp/
*/.idea/
*/.vscode/

/Kubernetes/raw/lenie_server_configmap.yaml
/Kubernetes/raw/lenie_server_secrets.yaml
/Kubernetes/raw/ecs_registry_password.yaml
/Kubernetes/raw/.dockerconfigjson
/infra/aws/serverless/lambdas/*/lambda.zip
/docker_build.sh
/debug.txt
/infra/kubernetes/lenie/raw/server/lenie_2_server_configmap.yaml
/infra/kubernetes/lenie/raw/server/lenie_3_server_secrets.yaml
/pre-hool.log
/cookies.txt
/infra/aws/serverless/lambdas/*/package/
/infra/aws/serverless/lambdas/*/*.zip
infra/aws/serverless/lambda_layers/tmp

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
/infra/gcloud/.terraform/
/infra/gcloud/.terraform.lock.hcl
/infra/gcloud/plan.txt
/infra/gcloud/plan_destroy.txt
/infra/gcloud/terraform-server/.terraform.lock.hcl
/Dockerfile.bak
/Dockerfile.bak.bak
/infra/vault/log.log
/infra/gcloud/terraform-server/plan.txt
/infra/gcloud/terraform-server/plan_destroy.txt
/README.md.bak
/infra/aws/cloudformation/apigw/lenie_dev_add_from_chrome_extension-v1-oas30-apigateway.json
/infra/aws/serverless/lambdas/tmp/lambda_function.py
/infra/aws/serverless/tmp/
