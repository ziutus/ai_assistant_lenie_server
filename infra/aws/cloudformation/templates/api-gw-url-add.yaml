AWSTemplateFormatVersion: '2010-09-09'
Description: 'API Gateway for Lenie Chrome Extension'

Parameters:
  stage:
    Default: dev
    Description: Specify stage (dev, qas, prd)
    Type: String
    AllowedValues:
      - dev
      - qas
      - prd

  LambdaFunctionName:
    Type: String
    Default: lenie-dev-url-add
    Description: Lambda function name for URL add endpoint

Resources:
  # API Gateway REST API
  LenieApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "lenie_${stage}_add_from_chrome_extension"
      Description: "API for Chrome extension \"Lenie AI assistant\""
      EndpointConfiguration:
        Types:
          - REGIONAL
      Body:
        openapi: "3.0.1"
        info:
          title: !Sub "lenie_${stage}_add_from_chrome_extension"
          description: "API for Chrome extension \"Lenie AI assistant\""
          version: "2025-02-21T10:52:31Z"
        paths:
          /url_add:
            post:
              responses:
                "200":
                  description: "200 response"
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Empty"
              security:
                - api_key: []
              x-amazon-apigateway-integration:
                type: "aws_proxy"
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"
                passthroughBehavior: "when_no_match"
                timeoutInMillis: 29000
                contentHandling: "CONVERT_TO_TEXT"
            options:
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content: {}
              x-amazon-apigateway-integration:
                type: "mock"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                passthroughBehavior: "when_no_match"
        components:
          schemas:
            Empty:
              title: "Empty Schema"
              type: "object"
          securitySchemes:
            api_key:
              type: "apiKey"
              name: "x-api-key"
              in: "header"

  # API Key
  LenieApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub "lenie-${stage}-api-key"
      Description: "API Key for Lenie Chrome Extension"
      Enabled: true

  # Usage Plan
  LenieUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub "lenie-${stage}-usage-plan"
      Description: "Usage plan for Lenie API"
      ApiStages:
        - ApiId: !Ref LenieApiGateway
          Stage: !Ref stage
      Throttle:
        RateLimit: 1000
        BurstLimit: 2000
      Quota:
        Limit: 10000
        Period: MONTH

  # Usage Plan Key
  LenieUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref LenieApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref LenieUsagePlan

  # API Gateway Deployment
  LenieApiDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref LenieApiGateway
      StageName: !Ref stage
      Description: !Sub "Deployment for ${stage} stage"

  # Lambda Permission for API Gateway
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LenieApiGateway}/*/*"


Outputs:
  ApiGatewayUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${LenieApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${stage}"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  ApiGatewayId:
    Description: "API Gateway ID"
    Value: !Ref LenieApiGateway
    Export:
      Name: !Sub "${AWS::StackName}-ApiId"

  ApiKey:
    Description: "API Key ID"
    Value: !Ref LenieApiKey
    Export:
      Name: !Sub "${AWS::StackName}-ApiKey"
