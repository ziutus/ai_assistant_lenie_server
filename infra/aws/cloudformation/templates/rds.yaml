Parameters:
  VPCId:
    Description: The VPC Id where the RDS instance will be deployed
    Type: AWS::SSM::Parameter::Value<String>
  Environment:
    Description: The stage of the application deployment
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - qa
      - prod
      - cob
      - test
      - feature
  ProjectName:
    Type: String
    Description: 'Project Name'
  RDSPasswordSecretArn:
    Type: String
    Description: 'ARN of the Secret in AWS Secrets Manager that holds the RDS master user password'

  DataSubnetA:
    Description: Reference of the DataSubnetA from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  DataSubnetB:
    Description: Reference of the DataSubnetB from the SSM
    Type: AWS::SSM::Parameter::Value<String>
  SnapshotIdentifier:
    Type: String
    Description: 'ARN of the DB snapshot (optional)'
    Default: ''

Conditions:
  HasSnapshot: !Not [!Equals [!Ref SnapshotIdentifier, '']]


Resources:
  MyDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: !If
        - HasSnapshot
        - !Ref AWS::NoValue
        - !Sub 'lenieTmp${Environment}'
      DBSnapshotIdentifier: !If
        - HasSnapshot
        - !Ref SnapshotIdentifier
        - !Ref AWS::NoValue
      Engine: postgres
      MasterUsername: !Sub '{{resolve:secretsmanager:${RDSPasswordSecretArn}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${RDSPasswordSecretArn}:SecretString:password}}'
      AllocatedStorage: '20'
      DBInstanceClass: db.t3.micro
      DBSubnetGroupName: !Ref DbSubnetGroup
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      MultiAZ: false
      VPCSecurityGroups:
            - !GetAtt MyDatabaseSecurityGroup.GroupId
#      DeletionPolicy: Snapshot

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Subnet group for ${ProjectName}-${Environment}-db instance
      SubnetIds:
        - !Ref DataSubnetA
        - !Ref DataSubnetB


  MyDatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for RDS DB Instance.
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
